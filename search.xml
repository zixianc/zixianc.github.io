<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[jenkins+docker持续集成构建SpringBoot项目]]></title>
      <url>https://zixianc.github.io/2017/12/06/springboot-docker-jenkins/</url>
      <content type="html"><![CDATA[<h2 id="SpringBoot项目配置"><a href="#SpringBoot项目配置" class="headerlink" title="SpringBoot项目配置"></a>SpringBoot项目配置</h2><p>新建一个名为docker-test的SpringBoot项目</p>
<h3 id="在springboot项目pom-xml中添加依赖"><a href="#在springboot项目pom-xml中添加依赖" class="headerlink" title="在springboot项目pom.xml中添加依赖"></a>在springboot项目pom.xml中添加依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;!-- docker打包 --&gt;</div><div class="line">&lt;plugin&gt;</div><div class="line">	&lt;groupId&gt;com.spotify&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;0.4.13&lt;/version&gt;</div><div class="line">	&lt;configuration&gt;</div><div class="line">		&lt;serverId&gt;docker-hosted&lt;/serverId&gt;</div><div class="line">		&lt;!-- docker仓库地址，用于推送镜像 --&gt;</div><div class="line">		&lt;registryUrl&gt;$&#123;docker.repository&#125;&lt;/registryUrl&gt;</div><div class="line">		&lt;pushImage&gt;true&lt;/pushImage&gt;</div><div class="line">		&lt;!-- Dockerfile路径 --&gt;</div><div class="line">		&lt;dockerDirectory&gt;src/main/docker&lt;/dockerDirectory&gt;</div><div class="line">		&lt;!-- 构建的镜像名称 --&gt;</div><div class="line">		&lt;imageName&gt;$&#123;docker.repository&#125;/$&#123;project.artifactId&#125;&lt;/imageName&gt;</div><div class="line">		&lt;imageTags&gt;</div><div class="line">			&lt;imageTag&gt;latest&lt;/imageTag&gt;</div><div class="line">		&lt;/imageTags&gt;</div><div class="line">		&lt;resources&gt;</div><div class="line">			&lt;resource&gt;</div><div class="line">				&lt;targetPath&gt;/&lt;/targetPath&gt;</div><div class="line">				&lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;</div><div class="line">				&lt;include&gt;$&#123;project.build.finalName&#125;.jar&lt;/include&gt;</div><div class="line">			&lt;/resource&gt;</div><div class="line">		&lt;/resources&gt;</div><div class="line">	&lt;/configuration&gt;</div><div class="line">&lt;/plugin&gt;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>docker仓库地址可以直接写在pom文件中，但为了多环境配置可以将地址配置在maven-settings.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;profiles&gt;</div><div class="line">  &lt;profile&gt;    </div><div class="line">    &lt;id&gt;nexus&lt;/id&gt;    </div><div class="line">  &lt;properties&gt;</div><div class="line">   &lt;docker.repository&gt;10.10.16.169:8083&lt;/docker.repository&gt;</div><div class="line"> &lt;/properties&gt;</div><div class="line">&lt;/profile&gt;</div><div class="line">&lt;/profiles&gt;</div><div class="line"></div><div class="line">&lt;activeProfiles&gt;    </div><div class="line"> &lt;activeProfile&gt;nexus&lt;/activeProfile&gt;    </div><div class="line">&lt;/activeProfiles&gt;</div></pre></td></tr></table></figure>
<h3 id="创建Dockerfile"><a href="#创建Dockerfile" class="headerlink" title="创建Dockerfile"></a>创建Dockerfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">FROM java:8 # 基础镜像（主程序镜像）</div><div class="line">VOLUME /tmp # 挂在tmp盘</div><div class="line">ADD docker-test-0.0.1-SNAPSHOT.jar workdir/app.jar</div><div class="line">WORKDIR workdir # 指定工作目录</div><div class="line">ENV JAVA_OPTS=&quot;&quot;</div><div class="line">ENTRYPOINT [ &quot;sh&quot;, &quot;-c&quot;, &quot;java -Djava.security.egd=file:/dev/./urandom -Duser.timezone=GMT+08 $JAVA_OPTS -jar /workdir/app.jar&quot; ] # 程序入口，支持动态传参</div></pre></td></tr></table></figure>
<h3 id="测试手动构建镜像"><a href="#测试手动构建镜像" class="headerlink" title="测试手动构建镜像"></a>测试手动构建镜像</h3><p>在命令行进入到项目路径执行<code>mvn clean package docker:build</code>来构建镜像，执行<code>mvn clean package docker:build -DpushImage</code>构建并推送镜像docker仓库</p>
]]></content>
      
        <categories>
            
            <category> SpringBoot </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> springboot </tag>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centos7安装mysql]]></title>
      <url>https://zixianc.github.io/2017/12/04/mysql-install/</url>
      <content type="html"><![CDATA[<h2 id="安装mysql-rpm包"><a href="#安装mysql-rpm包" class="headerlink" title="安装mysql-rpm包"></a>安装mysql-rpm包</h2><p>直接安装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure>
<p>或者下载到本地后安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</div><div class="line">yum localinstall mysql-community-release-el7-5.noarch.rpm</div></pre></td></tr></table></figure>
<p>验证是否安装成功：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum repolist enabled | grep &quot;mysql.*-community.*&quot;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装mysql-server"><a href="#安装mysql-server" class="headerlink" title="安装mysql-server"></a>安装mysql-server</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install mysql-community-server  -y</div><div class="line">rpm -qi mysql-community-server.x86_64 0:5.6.24-3.el7</div></pre></td></tr></table></figure>
<h2 id="相关设置"><a href="#相关设置" class="headerlink" title="相关设置"></a>相关设置</h2><h3 id="修改字符集"><a href="#修改字符集" class="headerlink" title="修改字符集"></a>修改字符集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/my.cnf</div></pre></td></tr></table></figure>
<p>在<code>[mysqld]</code>下添加<code>character_set_server = utf8</code>，启动后<code>SHOW VARIABLES LIKE &#39;character%&#39;;</code>查看字符集信息</p>
<h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><p><code>systemctl start mysqld</code>启动服务后<br><code>mysqladmin -u root password &#39;new-passwd&#39;</code></p>
<h3 id="开启远程访问"><a href="#开启远程访问" class="headerlink" title="开启远程访问"></a>开启远程访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;passwd&apos; with grant option;</div><div class="line">FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p>###安全设置（可选）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos7 </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[获取docker容器内java进程的堆栈信息]]></title>
      <url>https://zixianc.github.io/2017/11/23/docker-java-thread-heap-dump/</url>
      <content type="html"><![CDATA[<h2 id="进入docker容器内"><a href="#进入docker容器内" class="headerlink" title="进入docker容器内"></a>进入docker容器内</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker exec -it CONTAINER_NAME bash</div></pre></td></tr></table></figure>
<h2 id="查看java进程"><a href="#查看java进程" class="headerlink" title="查看java进程"></a>查看java进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jps</div></pre></td></tr></table></figure>
<h2 id="转存进程Thread信息"><a href="#转存进程Thread信息" class="headerlink" title="转存进程Thread信息"></a>转存进程Thread信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jstack PID &gt; thread.tdump</div></pre></td></tr></table></figure>
<h2 id="转存进程Heap信息"><a href="#转存进程Heap信息" class="headerlink" title="转存进程Heap信息"></a>转存进程Heap信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jmap -dump:live,format=b,file=heapDump.hprof PID</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="从容器中拷贝出文件"><a href="#从容器中拷贝出文件" class="headerlink" title="从容器中拷贝出文件"></a>从容器中拷贝出文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo docker cp CONTAINER_NAME:threadDump.tdump .</div><div class="line">sudo docker cp CONTAINER_NAME:heapDump.hprof .</div></pre></td></tr></table></figure>
<h2 id="使用MAT进行内存分析"><a href="#使用MAT进行内存分析" class="headerlink" title="使用MAT进行内存分析"></a>使用MAT进行内存分析</h2><p><a href="http://www.eclipse.org/mat/downloads.php" target="_blank" rel="external">MAT下载地址</a></p>
]]></content>
      
        <categories>
            
            <category> Docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centos7安装docker]]></title>
      <url>https://zixianc.github.io/2017/11/22/docker-install/</url>
      <content type="html"><![CDATA[<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(aliyun镜像) curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div><div class="line">(daocloud镜像) curl -fsSL https://get.docker.com/ | sh</div></pre></td></tr></table></figure>
<h2 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /etc/docker</div><div class="line">tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;</div><div class="line">&#123;</div><div class="line">  &quot;registry-mirrors&quot;: [&quot;aliyun加速地址&quot;]</div><div class="line">&#125;</div><div class="line">EOF</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="修改允许非安全的仓库"><a href="#修改允许非安全的仓库" class="headerlink" title="修改允许非安全的仓库"></a>修改允许非安全的仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /usr/lib/systemd/system/docker.service</div></pre></td></tr></table></figure>
<p>找到ExecStart属性，在dockerd后面添加–insecure-registry 服务器IP:Docker仓库端口 ，最终为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecStart=/usr/bin/dockerd --insecure-registry 0.0.0.0/0</div></pre></td></tr></table></figure></p>
<h2 id="设置开机并重启docker"><a href="#设置开机并重启docker" class="headerlink" title="设置开机并重启docker"></a>设置开机并重启docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">systemctl enable docker</div><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div><div class="line">docker login --username=admin --passwrod=seentao registry-host:port</div></pre></td></tr></table></figure>
<h2 id="安装docker-bash"><a href="#安装docker-bash" class="headerlink" title="安装docker-bash"></a>安装docker-bash</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install wget -y</div><div class="line">wget -P ~ https://github.com/yeasy/docker_practice/raw/master/_local/.bashrc_docker</div><div class="line">echo &quot;[ -f ~/.bashrc_docker ] &amp;&amp; . ~/.bashrc_docker&quot; &gt;&gt; ~/.bashrc</div><div class="line">source ~/.bashrc</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> centos7 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
